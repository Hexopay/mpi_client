require 'spec_helper'

describe 'test of verification PaRes' do
  it "should return ECI, XID, CAVV, STATUS and CAVV_ALGORITHM" do
    req = PaRes::Request.new(pa_res: pa_res, md: "3658442")
    response = req.process

    response.eci.should == '05'
    response.xid.should == 'NVRKWEY3TkMyVzZOUlpESDRVQ1M='
    response.cavv.should == 'AAACB0VpKVZxMmdAlGkpEwAAAAA='
    response.status.should == 'Y'
    response.cavv_algorithm.should == '2'
    response.signature.should == '292f38fe24e5c9f325adf26c3ab6feab867a8295'
  end

  def pa_res
    <<-PARes
    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
    PARes
  end
end
