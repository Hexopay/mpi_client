require 'spec_helper'

describe 'test of verification PaRes' do
  let(:md) { '73050' }

  it "should return ECI, XID, CAVV, STATUS and CAVV_ALGORITHM" do
    req = PaRes::Request.new(pa_res: pa_res, md: md)
    response = req.process

    response.eci.should == '06'
    response.xid.should == '72CQDXB7X4G89VC6LSUC'
    response.cavv.should == 'CAACBRA0iSZiZ5FVUzSJAAAAAAA='
    response.status.should == 'A'
    response.cavv_algorithm.should == '2'
    response.signature.should == '07f4858c058f7a0fd42c18f621bc1559d1802b06'
  end

  def pa_res
    <<-PARes
    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
    PARes
  end

end
